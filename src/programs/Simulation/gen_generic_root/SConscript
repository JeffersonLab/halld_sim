
import os
import sbms

# get env object and clone it
Import('*')

#SConscript(dirs=['ff_coulomb','ff_strong','ds_eta_he4','inc_eta_he4'], exports='env osname', duplicate=0)

# Verify CERN environment variable is set
if os.getenv('CERN', 'nada')=='nada':
	if env.Dir('.').srcnode().abspath.startswith(env.GetLaunchDir()):
		print('============================================================')
		print('CERN environment variable not set. Skipping build of bggen')
		print('============================================================')

else:

	env = env.Clone()
	
	# Turn off warnings for bggen since Pythia has too many
	env['FORTRANFLAGS'].remove('-Wall')

	sbms.AddCERNLIB(env)

# Verify AMPTOOLS environment variable is set
if os.getenv('AMPTOOLS', 'nada')!='nada' and os.getenv('CERN', 'nada')!='nada':

   env = env.Clone()

   AMPTOOLS_LIBS = "AMPTOOLS_AMPS AMPTOOLS_DATAIO AMPTOOLS_MCGEN UTILITIES"
   env.AppendUnique(LIBS = AMPTOOLS_LIBS.split())
     
   sbms.AddHDDM(env)
   sbms.AddROOT(env)
   sbms.AddAmpTools(env)
   sbms.AddUtilities(env)
   sbms.AddCERNLIB(env)
   
   sbms.executable(env)


# Optional targets (can only be built from inside
# source directory or if specified on command line)
optdirs=['ff_coulomb','ff_strong','ds_eta_he4','inc_eta_he4']
