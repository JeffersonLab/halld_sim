
import os
import sbms

# get env object and clone it
Import('*')

# Verify CERN environment variable is set
if os.getenv('CERN', 'nada')=='nada':
	if env.Dir('.').srcnode().abspath.startswith(env.GetLaunchDir()):
		print('============================================================')
		print('CERN environment variable not set. Skipping build of bggen')
		print('============================================================')

else:

	env = env.Clone()
	
	# Turn off warnings for bggen since Pythia has too many
	fflags = env['FORTRANFLAGS'].remove('-Wall')
	env.Replace(FORTRANFLAGS=fflags)
        # link with gfortran as well, in order to bring in the right libraries
        # probably should not hardcode this?  but it's an optional build
	env['LINK'] = 'gfortran'
        # allow	long line lengths\
	env.PrependUnique(FORTRANFLAGS = ['-ffixed-line-length-132'])

	sbms.AddHDDM(env)
	sbms.executable(env, 'xsec_table')
