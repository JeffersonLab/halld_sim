
import os
import sbms
import subprocess

Import('*')

# Verify CERN environment variable is set
if os.getenv('CERN', 'nada')=='nada':
	if env.Dir('.').srcnode().abspath.startswith(env.GetLaunchDir()):
		print('============================================================')
		print('CERN environment variable not set. Skipping build of HDGeant')
		print('============================================================')

else:

	# get env object and clone it
	env = env.Clone()

	#bms_osname = os.environ['BMS_OSNAME']
	bms_osname = env['OSNAME']
	bms_split = bms_osname.split('gcc')
	if len(bms_split) >= 2 :
		postgcc = bms_split[1]
		if (postgcc.endswith('-cntr')):
			vers_end = len(postgcc) - 5
			version_string = postgcc[0:vers_end]
		else:
			version_string = postgcc
		versions = (version_string + ".0.0").split('.')
		if int(versions[0]) >= 4 and int(versions[1]) >= 8 or int(versions[0]) >= 5:
			env.PrependUnique(FORTRANFLAGS = ['-fno-aggressive-loop-optimizations'])

		SConscript(dirs=['gelhad', 'hitutil', 'utilities'], exports='env osname', duplicate=0)

		env.AppendUnique(LIBS      = ['hddsGeant3', 'gelhad', 'hitutil'])

		sbms.AddCERNLIB(env)
		sbms.AddDANA(env)
		sbms.AddROOT(env)

		env.AppendUnique(CPPPATH = '#libraries/HDDM')

		sbms.executables(env)
